const docs = {
  entityFunctions: {
    addcoltotals: `
        <h3>addcoltotals [labelfield=&lt;fieldname&gt;] [label=&lt;string&gt;]</h3>
        <div>
          Команда добавляет сумму каждого числового поля
          в конец набора результатов запроса. Если указан аргумент labelfield,
          в таблицу результатов добавляется столбец с указанным именем.
        </div>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>labelfield</b> - Определяет имя поля для добавления в набор результатов.</li>
        <li><b>label</b> - Используется с аргументом labelfield для добавления метки
          в итоговое событие. Если аргумент labelfield отсутствует,
          аргумент label не имеет никакого эффекта</li>
        </ul>
      `,
    addinfo: `
        <h3>addinfo</h3>
        <div>
          Команда добавляет поля, общую информацию об идентификаторе запроса
          и временных интервалах.
        </div>
        <div>Следующие поля добавляются к каждому событию при использовании команды <b>addinfo</b>:</div>
        <ul>
        <li><b>info_min_time</b> - Самая ранняя временная граница для поиска.</li>
        <li><b>info_max_time</b> - Самая поздняя временная граница для поиска.</li>
        <li><b>info_sid</b> - Идентификатор поиска, который сгенерировал событие.</li>
        </ul>
      `,
    addtotals: `
        <h3>addtotals [row=&lt;bool&gt;] [fieldname=&lt;field&gt;] [col=&lt;bool&gt;]
         [labelfield=&lt;field&gt;] [label=&lt;string&gt;] &lt;field-list&gt;</h3>
        <div>
          Команда вычисляет арифметическую сумму числовых полей для каждого результата запроса.
          Сумма помещается в новое поле. Если установлен параметр <b>col</b> = true,
          команда <b>addtotals</b> добавляет сумму каждого числового поля в конец набора результатов запроса.
          Кроме того, вместо использования команды <b>addtotals</b> с параметром <b>col</b> = true,
          можно использовать команду <b>addcoltotals</b> для вычисления итогового события.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>field-list</b>  - одно или несколько числовых полей для вычисления суммирующего значения.</li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>row</b> - указывает, следует ли рассчитывать сумму <b>field-list</b> для каждого события.
         Это похоже на вычисление итога для каждой строки в таблице. Сумма помещается в новое поле.
         Имя поля по умолчанию – Total. Если необходимо указать другое имя для поля,
         используется параметр <b>fieldname</b>. Значение по умолчанию: true.</li>
        <li><b>fieldname</b> - используется для указания имени поля,
         которое содержит рассчитанную сумму списка полей для каждого события.
         Параметр <b>fieldname</b> действителен только тогда, когда <b>row</b> = true.</li>
        <li><b>col</b> - указывает на необходимость добавления нового события,
         называемого сводным событием, вниз списка событий.
         Сводное событие отображает сумму каждого поля в событиях,
         аналогично вычислению итоговых значений столбцов в таблице.
         <br>Значение по умолчанию: false.</li>
        <li><b>labelfield</b> - используется для указания поля метки сводного события.
         Аргумент <b>labelfield</b> действителен только тогда, когда <b>col</b> = true.</li>
        <li><b>label</b> - используется для указания метки строки для сводного события.</li>
        </ul>
      `,
    append: `
        <h3>append &lt;subsearch&gt;</h3>
        <div>
          Команда добавляет результаты подзапроса к текущим результатам. Синоним команды – <b>union</b>.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>subsearch</b> - дополнительный запрос, результаты выполнения которого необходимо добавить.
         Подзапрос должен быть заключен в квадратные скобки.</li>
        </ul>
      `,
    appendcols: `
        <h3>appendcols &lt;subsearch&gt;</h3>
        <div>
          Команда добавляет результаты подзапроса, как новые поля текущего запроса.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>subsearch</b> - дополнительный запрос, результаты выполнения которого необходимо добавить.
         Подзапрос должен быть заключен в квадратные скобки.</li>
        </ul>`,
    appendpipe: `
        <h3>appendpipe  &lt;subpipeline&gt;</h3>
        <div>
          Команда добавляет результаты подзапроса, как новые поля текущего запроса.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>subpipeline</b> - список преобразований, которые применяются к результатам
         выполнения основного запроса.</li>
        </ul>
      `,
    bin: `
        <h3>bin [&lt;bin-options&gt;...] &lt;field&gt; [AS &lt;newfield&gt;]</h3>
        <div>
          Команда отображает числовые значения поля в дискретный набор значений таким образом,
          что все значения из заданного диапазона значений этого же поля принимают одно из значений дискретного ряда.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>field</b> - поле, к которому будет применяться дискретизация.</li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>bin-options</b> - опции команды <b>bin</b>:
          <ul>
            <li>bins – устанавливает максимальное число фрагментов отображения (дискретизации).</li>
            <li>span – устанавливает размер каждого фрагмента отображения (дискретизации) в единицах времени.
             Параметр применим только к полю _time.</li>
           </ul>
         </li>
        <li><b>AS &lt;newfield&gt;</b> - имя нового поля, в которое будет записано значение после операции отображения (дискретизации).<b>bin</b>:</li>
        </ul>
      `,
    chart: `
        <h3>chart &lt;stats-agg-term&gt; [OVER &lt;row-split&gt;] [BY &lt;column-split&gt;]</h3>
        <div>Команда chart группирует записи по указанному полю и является трансформирующей командой,
         которая возвращает результаты в табличном формате.
         <br>
         Результат, затем, может быть визуализирован в разных форматах – линейный график,
         столбчатая диаграмма, круговая диаграмма.
         <br>
         В команде chart должна быть определена статистическая функция для агрегации данных.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>stats-agg-term</b> - статистические функции, применяемые к полям и eval-выражениям.
         Результат выполнения функции может быть помещён в отдельное поле с именем, указанным после операнда AS.
         <br>
         Синтаксис: &lt;stats-func&gt;( &lt;evaled-field&gt; | &lt;wc-field&gt; ) [AS &lt;new-field&gt;].</li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>OVER &lt;row-split&gt;</b> - поле, определенное после OVER, появится в первой колонке результирующей таблицы.
         Значения полей в исходных данных станут значениями рядов в результирующей таблице.
         Если далее строить график по этой таблице, то эти поля будут отмечены на оси Х.</li>
        <li><b>BY &lt;column-split&gt;</b> - одно или несколько полей, значения которых будут названиями столбцов в результирующей таблице.</li>
        </ul>
      `,
    collect: `
        <h3>collect index=&lt;string&gt; [host=&lt;host&gt; source=&lt;source&gt; sourcetype=&lt;sourcetype&gt;]</h3>
        <div>Команда сохраняет результаты запроса в указанном индексе.</div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>string</b> - имя индекса, в который добавляются события.</li></ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>host</b> - имя хоста, указываемое для событий.</li>
        <li><b>source</b> - имя источника, указываемое для событий.</li>
        <li><b>sourcetype</b> - имя типа источника, указываемое для событий.</li>
        </ul>
      `,
    command: `
        <h3>command &lt;field&gt;=[&lt;spark_function&gt;(&lt;field&gt;, &lt;options&gt;)]</h3>
        <div>Команда позволяет использовать функции <b>Spark</b> для обработки полей.</div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>field</b> - имя поля, которому присваивается полученное значение.</li></ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>spark_function</b> - функция <b>Spark</b></li>
        </ul>
      `,
    dedup: `
        <h3>dedup &lt;field-list&gt; [sortby &lt;sort-by-clause&gt;]</h3>
        <div>Команда удаляет события, которые содержат повторяющееся значение поля
         или повторяющуюся идентичную комбинацию значений полей,
         заданных как параметры команды. Такая процедура называется дедупликацией.
         <br><br>
         <b>Важно!</b><br>
         Порядок, в котором события будут поступать на обработку в команду <b>dedup</b>,
         определяется результатом выполнения предыдущих команд.
         При этом один и тот же порядок событий не может быть гарантирован для разных запусков запроса.
         <br><br>
         В случае необходимости сохранения одного и того же порядка событий для разных запусков запроса,
         необходимо предусмотреть сортировку событий до их поступления на вход команды dedup.
         Для этого, например, можно использовать команду sort.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>field-list</b> - поле или перечень полей, по которым выполняется дедупликация.</li></ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>sortby &lt;sort-by-clause&gt;</b> - порядок сортировки результата дедупликации по заданному полю:
          <ul>
            <li>в порядке возрастания – при указании префикса '+' перед полем сортировки;</li>
            <li>в порядке убывания – при указании префикса '-' перед полем сортировки.</li>
          </ul>
        </li>
        </ul>
      `,
    delta: `
        <h3>delta (&lt;field&gt; [AS &lt;newfield&gt;]) [p=int]</h3>
        <div>Вычисляет разницу между соседними результатами, используя значение определенного числового поля.
         Для каждого события, где поле field является числом, команда <b>delta</b> вычисляет разницу
         в порядке поиска между значением поля для текущего события и
         значением поля для предыдущего события. Команда <b>delta</b> записывает эту разницу в newfield.
         <br><br>
         <b>Важно!</b><br>
         Порядок, в котором события будут поступать на обработку в команду <b>delta</b>,
         определяется результатами выполнения предыдущих команд.
         В случае необходимости сохранения одного и того же порядка событий,
         необходимо предусмотреть сортировку событий внутри запроса (использование команды sort).
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li><b>field</b> - имя поля для анализа.</li></ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>AS &lt;newfield&gt;</b> - псевдоним для нового поля, в которое будет записана вычисляемая разница (дельта).</li>
        <li><b>p</b> - определяет значение какого результата перед текущим использовать для сравнения:
          <ul>
            <li><b>p</b> = 1 (по умолчанию), текущее значение результата сравнивается со значением
             в первом результате до текущего результата;</li>
            <li><b>p</b> = 2, текущее значение результата сравнивается со значением во втором результате
             до текущего результата; <br>и так далее.</li>
          </ul>
        </li>
        </ul>
      `,
    eval: `
        <h3>eval &lt;field&gt;=&lt;expression&gt;["," &lt;field&gt;=&lt;expression&gt;]</h3>
        <div>Команда <b>eval</b> вычисляет выражение и помещает полученное значение в поле результатов поиска:
          <ul>
            <li>По результатам работы команды <b>eval</b> вычисляется новое поле,
             которое добавляется в результаты поиска.</li>
            <li>Если имя вычисляемого поля совпадает с именем поля, которое уже существует в результатах поиска,
             то результаты выражения <b>eval</b> перезаписывают значения в существующем поле.</li>
            <li>Результатом выражения <b>eval</b> не может быть логическое значение.</li>
            <li>Если во время поиска выражение не может быть успешно вычислено для данного события,
             команда <b>eval</b> стирает результирующее поле и значением поля становится 'NULL'.</li>
            <li>Если выражение ссылается на имя поля, которое не содержит алфавитно-цифровые
             символы за исключением символа подчеркивания (_), то имя поля должно быть заключено в кавычки.
             Например, если имя поля – server-1, указывается new = count + "server-1".</li>
            <li>Если выражение ссылается на строку (string), то эта строка должна быть заключена в кавычки.
             Например, если имя строки – "server", строка указывается как new = "server".</li>
          </ul>
          Команда eval оценивает математические, строковые и логические выражения.
          Можно объединить несколько выражений в одном запросе,
          используя запятую для разделения последующих выражений.
          Запрос обрабатывает несколько выражений eval слева направо и позволяет ссылаться
          на ранее преобразованные поля в последующих выражениях.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>&lt;field&gt;=&lt;expression&gt;</b>:
          <ul>
          <li><b>field</b> – имя поля назначения для результирующего вычисленного значения.
           Если имя поля уже существует в событиях, <b>eval</b> перезаписывает значение.</li>
          <li><b>expression</b> – комбинация значений, переменных, операторов и функций,
           которые будут выполнены, чтобы определить значение для размещения в поле назначения.</li>
          </ul>
        </li>
        </ul>
      `,
    eventstats: `
        <h3>eventstats &lt;stats-agg-term&gt; ... [&lt;by-clause&gt;]</h3>
        <div>Команда считает статистику из значений полей и сохраняет результат в новом поле.
         В статистике участвуют события, имеющие в своем составе поля, для которых должна быть посчитана статистика.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>stats-agg-term</b> - статистические функции, применяемые к полям и eval-выражениям.
           Результат выполнения функции может быть помещён в отдельное поле с именем, указанным после операнда AS. <br>
           Синтаксис: &lt;stats-func&gt;( &lt;evaled-field&gt; | &lt;wc-field&gt; ) [AS &lt;new-field&gt;]
        </li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>by-clause</b> - поле или несколько полей, по которым надо рассчитать агрегацию (группировку). <br>
          Синтаксис: by &lt;field1&gt; &lt;field2&gt; ....
        </li>
        </ul>
      `,
    fields: `
        <h3>fields [-|*] &lt;field-list&gt; </h3>
        <div>Команда оставляет или удаляет выбранные поля из результатов запроса.
         В случае, если команда помещена в конце запроса, то на экран будут выведены указанные поля.
         Если команда указана в середине запроса, то дальнейшая обработка данных будет происходить
         с указанными после <b>fields</b> полями. Синоним команды – <b>table</b>.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field-list</b> - список полей (через запятую), к которым должна быть применена команда fields.
           Также для указания полей с похожими именами можно использовать * (wildcard). <br>
           Синтаксис: <field1>, <field2>, ...
        </li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>-|*</b> - символ минус "-" или звездочка:
          <ul>
            <li>"-" – поля, указанные после этого символа, будут удалены из результатов запроса.</li>
            <li>"*" - будут получены все поля, включая поле _raw.</li>
          </ul>
        </li>
        </ul>
      `,
    filldown: `
        <h3>filldown [&lt;wc-field-list&gt; [BY &lt;field-group&gt;]]</h3>
        <div>Команда оставляет или удаляет выбранные поля из результатов запроса.
         В случае, если команда помещена в конце запроса, то на экран будут выведены указанные поля.
         Если команда указана в середине запроса, то дальнейшая обработка данных будет происходить
         с указанными после <b>fields</b> полями. Синоним команды – <b>table</b>.
        </div>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>wc-field-list</b> - разделённые запятой имена полей, к которым будет применена команда <b>filldown</b>. <br>
         Синтаксис: &lt;field1&gt;, &lt;field2&gt;, ...
        </li>
        <li><b>BY &lt;field-group&gt;</b> - поле, по которому в таблице будет выполнена группировка
         для дальнейшего заполнения NULL-значений полей, указанных в параметре <b>wc-field-list</b>,
         отдельно по каждой группе. <br>
         <b>Важно!</b> <br>
         При использовании параметра <b>BY &lt;field-group&gt;</b> должен быть определён параметр <b>wc-field-list</b>.
        </li>
        </ul>
      `,
    fillnull: `
        <h3>fillnull [value=&lt;string&gt;] [&lt;field-list&gt;]</h3>
        <div>Если значение поля отсутствует, то есть равно NULL,
         то оно заполняется заданным в качестве аргумента значением. Если не определить конкретное значение
         для автозаполнения NULL-поля, то оно будет заполнено нулем (0).
         Если не определить список имен полей, NULL-значения которых должны быть автоматически заполнены,
         то будут заполнены все NULL-значения всех полей.
        </div>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>field-list</b> - одно или несколько полей, разделенных пробелами.
         Если параметр не задан, то команда <b>fillnull</b> применяется ко всем полям. <br>
         Синтаксис: <string> <string> ...
        </li>
        <li><b>value</b> - определяет, чем будут заполнены NULL-значения. Значение по умолчанию – 0.
        </li>
        </ul>
      `,
    foreach: `
        <h3>foreach &lt;wc-field&gt;... &lt;subsearch&gt;</h3>
        <div>Команда запускает шаблонный поисковый запрос для каждого поля,
         к которому есть обращение через wildcard-конструкции в синтаксисе команды.
        </div>
        <div>Обязательные параметры:</div>
        <ul>
        <li><b>wc-field</b> -  список имен полей, к которым будет применяться шаблонный поисковый запрос.
         Можно использовать wildcard-конструкции при задании полей. <br>
         Синтаксис: &lt;field1&gt; &lt;field2&gt;...</li>
        <li><b>subsearch</b> -  поисковый запрос-шаблон, который будет применяться к полям wc-field,
         заменяя wildcard поля конкретными значениями. Синтаксис: [ subsearch ]. <br>
         В тексте шаблонного запроса допускается использование следующих wildcard-конструкций:
         <ul>
         <li>&lt;&lt;FIELD&gt;&gt; – токен &lt;&lt;FIELD&gt;&gt; будет заменен именем поля целиком.</li>
         <li>&lt;&lt;MATCHSTR&gt;&gt; – токен &lt;&lt;MATCHSTR&gt;&gt; будет заменен частью имени поля, которая определяется wildcard-правилами.</li>
         </ul>
        </li>
        </ul>
      `,
    head: `
        <h3>head [<N>] | [limit=<int>]</h3>
        <div>Команда возвращает первые N результатов поиска. Отсчет результатов будет вестись в порядке поиска,
         то есть, в том порядке, в котором события поступают на вход команды head после обработки
         предыдущими командами. <br><br>
         Важно!<br>
         Порядок, в котором события будут поступать на обработку в команду <b>head</b>,
         определяется результатом выполнения предыдущих команд. Иногда один и тот же порядок событий
         не может быть гарантирован для разных запусков запроса. В случае необходимости сохранения
         одинакового порядка событий для разных запусков запроса, необходимо предусмотреть сортировку
         событий до их поступления на вход команды <b>head</b>. Для этого можно использовать команду sort.
        </div>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>N</b> - целое число, определяющее количество возвращаемых результатов.</li>
        <li><b>limit=&lt;int&gt;</b> - другой вариант задания количества возвращаемых результатов.
        Если значение возвращаемых результатов не задано, то head возвращает 10 результатов.</li>
        </ul>
      `,
    inputlookup: `
        <h3>inputlookup [append=&lt;bool&gt;] &lt;filename&gt; [WHERE &lt;search-query&gt;]</h3>
        <div>Команда <b>inputlookup</b> используется для вывода содержимого lookup-таблицы
         и поиска по ней. Lookup-таблица это файл в CSV-формате.<br><br>
         Важно!<br>
         Эту команду не рекомендуется применять при поиске по датам и времени.
         Для получения корректного результата поиска по датам и времени используйте команды otstats и search.
        </div>
        <div>Обязательный параметр</div>
        <ul>
        <li><b>filename</b> - имя lookup-файла. Lookup-файл может не иметь расширения .csv,
         но должен быть в формате CSV.</li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>append</b> 
        <ul>
        <li>если <b>append</b>=true, то данные lookup-файла будут присоединены к результатам,
         полученным до вызова команды <b>inputlookup</b>.</li>
        </ul>
        <li>если <b>append</b>false (значение по умолчанию),
         то содержимое lookup-файла заменит результаты, полученные до вызова команды <b>inputlookup</b>.</li>
        </ul>
        </li>
        <li><b>WHERE &lt;search-query&gt; </b> - опция для предварительной фильтрации данных lookup-файла.
         Результатом поискового запроса будут только те строки lookup-файла, которые попадут под условия фильтрации.
         Поддерживается следующий набор операторов: =, !=, <, >, <=, >=, AND, OR, NOT.</li>
        </ul>
      `,
    join: `
        <h3>join [join-options...] [field-list] &lt;subsearch&gt;</h3>
        <div>Команда <b>join</b> комбинирует результаты поискового подзапроса с результатами основного запроса.
         Основной запрос и подзапрос должны содержать в себе одно или несколько идентичных полей.<br>
         Альтернативные команды. Если для решения задачи не требуется в точности семантика join,
         то использование схожих по функционалу команд может быть более целесообразно:
         append, appendcols, lookup, search, stats.
        </div>
        <div>Обязательный параметр</div>
        <ul>
        <li><b>subsearch</b> – опции команды join. <br>
          Синтаксис: type=(inner | outer | left | right) | max=<int>. <br>
          Описание:
          <ul>
          <li><b>type</b> – опции команды <b>join</b>. <br>
          Синтаксис: type=inner | outer | left | right. <br>
          Значение по умолчанию: left. <br>
          Разница между типами заключается в том, каким образом обрабатываются события основного запроса,
          которые не могут быть поставлены в соответствие событиям поискового подзапроса.
          Как в <b>inner</b> так и в <b>left</b> возвращаются только те события, которые могут быть поставлены 
          в соответствие друг другу по заданному полю. Однако результаты inner join не включают события 
          основного запроса, которые не имеют совпадений в подзапросе. Результат же left join (или outer join) 
          включает все события основного запроса и те события из подзапроса, которые могут быть поставлены в 
          соответствие событиям основного запроса по заданному полю.
          </li>
          <li><b>max</b> - максимальное возвращаемое количество результатов поискового подзапроса, 
          с которым будет объединён каждый результат основного запроса. Параметр, равный нулю (0),
          означает, что ограничений на количество результатов нет. <br>
          Значение по умолчанию: 0. <br>
          Синтаксис: max=&lt;int&gt;.</li>
          <li><b>field-list</b> - поля, по которым будет выполняться команда join. Совпадение значений
          полей основного запроса и подзапроса должно быть с точностью до регистра отдельных символов. <br>
          Синтаксис: &lt;field1&gt;, &lt;field2&gt;, ...
          </li>
          </ul>
        </li>
        </ul>
      `,
    lookup: `
        <h3>lookup &lt;lookup-file&gt; &lt;field-list&gt; [AS &lt;new_field_name&gt;]</h3>
        <div>Команда используется для добавления поля из существующей таблицы в результаты запроса. 
         В качестве существующей таблицы обычно выступает таблица в CSV-формате, сохраненная в файловой системе.
        </div>
        <div>Обязательный параметр</div>
        <ul>
        <li><b>lookup-file</b> – имя файла таблицы, сохраненное в файловой системе, в директории ../lookups.
        </li>
        <li><b>field-list</b> - поле или список полей (через запятую),
         по которым осуществляется связка таблицы с результатами запроса.</li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>AS &lt;new_field_name&gt;</b> – имя, используемое для переименования поля в существующей таблице,
         если целевое поле с ним не совпадает.
        </li>
        </ul>
      `,
    makemv: `
        <h3>makemv [delim=&lt;string&gt;] &lt;field&gt;</h3>
        <div>Команда конвертирует поле, состоящее из одного значения (singlevalue-поле),
         в поле, состоящее из нескольких значений (multivalue-поле),
         разделяя singlevalue-поле на отдельные части указанным строковым разделителем.
        </div>
        <div>Обязательный параметр</div>
        <ul>
        <li><b>field</b> – имя singlevalue-поля, которое будет преобразовано в multivalue-поле.</li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>delim=&lt;string&gt;</b> – строка, которая будет использована в качестве разделителя
         при преобразовании в multivalue-поле. <br>
         Значение по умолчанию: пробел (" ").
        </li>
        </ul>
      `,
    makeresults: `
        <h3>makeresults [count=&lt;num&gt;] [annotate=&lt;bool&gt;]</h3>
        <div>Команда создает (генерирует) требуемое количество результатов поиска.
          Если не указывать опциональные параметры, то команда генерирует только один результат
          с единственным полем _time. <br>
          <b>Важно!</b><br>
          Эту команду не рекомендуется применять при поиске по датам и времени.
          Для получения корректного результата поиска по датам и времени пользуйтесь командами otstats и search.
        </div>
        <div>Опциональные параметры:</div>
        <ul>
        <li><b>count</b> – количество результатов, которые должны быть сгенерированы. Значение по умолчанию: 1. <br>
         Если count не указан, то команда генерирует только один результат с единственным полем _time.
        </li>
        <li><b>annotate</b>:<br>
          <ul>
          <li>если <b>annotate</b>=true, то дополнительно будут сгенерированы результаты с полями,
           указанными в таблице ниже;</li>
          <li>если <b>annotate</b>=false, то сгенерированные результаты будут содержать только поле _time.
           Значение по умолчанию: false.</li>
          </ul>
        </li>
        </ul>
      `,
    mvcombine: `
        <h3>mvcombine &lt;field&gt;</h3>
        <div>Команда берет группу событий, которые отличаются только одним полем, содержащим определенное значение,
         и комбинирует их в одно событие. Значение в этом поле становится массивом значений
         из скомбинированных по этому полю значений.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field</b> – имя поля, значения которого будут комбинироваться.</li>
        </ul>
      `,
    mvexpand: `
        <h3>mvexpand &lt;field&gt; [limit=&lt;int&gt;]</h3>
        <div>Команда разворачивает значения многозначного поля в отдельные события.
         Для каждого результата команда создаёт новое событие.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field</b> – имя многозначного поля.</li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li>
          <b>limit=&lt;int&gt;</b> – количество значений в многозначном поле <b>field</b>,
           которое будет использоваться для каждого входного события.</li>
        </ul>
      `,
    nomv: `
        <h3>nomv &lt;field&gt;</h3>
        <div>Команда разворачивает значения многозначного поля в отдельные события.
         Для каждого результата команда создаёт новое событие.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field</b> – имя multivalue-поля, которое необходимо конвертировать в singlevalue-поле</li>
        </ul>
      `,
    otloadjob: `
        <h3>otloadjob &lt;spl-query&gt;</h3>
        <div>Команда извлекает из кеша результаты ранее выполненного запроса.
         Извлечение результата из кеша предполагает, что запрос не выполняется заново, а запрашиваются только его результаты.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>spl-query</b> – поисковый запрос, результаты которого требуется извлечь из кеша.
           Успешное выполнение команды otloadjob возможно только при наличии двух условий:
           <ul>
           <li>Запрос, результат которого требуется получить, должен быть выполнен.</li>
           <li>Время хранения результата выполненного запроса не истекло. <br>
            Если хотя бы одно из условий отсутствует, запрос, указанный в параметре <b>spl-query</b>,
            будет выполнен повторно. <br>
            Spl-запрос задается как строка. При этом, если внутри запроса встречаются кавычки,
            то они должны быть заэкранированы символом обратный слеш ("\\"). <br>
            Синтаксис: spl="spl-запрос". 
           </li>
          </ul>
        </li>
        </ul>
      `,
    otstats: `
        <h3>otstats index=&lt;index-name&gt; [&lt;logical-expression&gt;] [&lt;time&gt;] </h3>
        <div>Команда используется для получения из индекса данных с извлеченными во время индексации полями.
         Вы можете получить события из индексов, указывая необходимые поля и используя логические выражения.
         Также для получения более широкого поля результатов можно использовать wildcard (*). <br>
         Команда <b>otstats</b> также может быть использована в подзапросе. После того как данные получены из индекса,
         к ним можно применять различные команды трансформации, фильтрации и т.д.
         Отличие от команды <b>search</b> (которая читает и выводит только поля _time и _raw) заключается в том, 
         что <b>otstats</b> читает из файловой системы уже проиндексированные поля, что ускоряет работу поиска, 
         так как нет необходимости проводить дополнительный парсинг во время поискового запроса.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>index</b> – имя индекса, из которого будут читаться данные.
           Имя индекса необходимо заключать в двойные кавычки.
        </li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li>
          <b>logical-expression</b> – логическое выражение. Выражение может содержать два и более вариантов поиска,
           соединенных логическими операторами, такими как OR или AND. Поиск по определенным значениям осуществляется
           с помощью знака равно "=" или "!=". Может быть использован также оператор регулярных выражений wildcard
           (в конце строки) и знаки сравнения (<, >, >=, <=, !=) для числовых значений.
        </li>
        <li>
          <b>time</b> – в подзапросах (или основном запросе) могут использоваться дополнительные опции
           времени (latest= и earliest=) для поиска по другому временному интервалу.
           Временные рамки указываются в формате Epoch time (Linux time).
        </li>
        </ul>
      `,
    outputlookup: `
        <h3>outputlookup &lt;filename&gt; [append=&lt;bool&gt;]</h3>
        <div>Команда сохраняет результаты запроса в статическую таблицу (lookup).
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>filename</b> – имя lookup-файла.
        </li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li>
          <b>append</b>:
          <ul>
          <li>если <b>append</b>=false (по умолчанию), то команда outputlookup перезаписывает данные в существующем lookup-файле;</li>
          <li>если <b>append</b>=true, то outputlookup пытается добавить результаты запроса в существующий файл.</li>
          </ul>
        </li>
        </ul>
      `,
    rangemap: `
        <h3>rangemap field=&lt;string&gt; (&lt;attribute_name&gt;=&lt;numeric_range&gt;)... [default=&lt;string&gt;]</h3>
        <div>Команда разбивает значения числового поля на категории. Команда добавляет новое поле с именем range
         к каждому событию и отображает категорию в этом поле. <br>
         Значения в поле range основаны на указанных числовых диапазонах. Если значение в числовом поле не соответствует
          какому-либо из указанных диапазонов, поле range устанавливается в значение по умолчанию.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field</b> –  имя категоризируемого поля, содержащего числовые значения.
        </li>
        <li>
          <b>&lt;attribute_name&gt;=&lt;numeric_range&gt;</b>:
          <ul>
          <li><b>attribute_name</b> - строка, выводимая в поле range, когда значение в <b>field</b> попадает в диапазон значений из <b>numeric_range</b>. <br>
          Значения могут быть целыми числами или числами с плавающей запятой. Первое значение должно быть меньше, чем второе.</li>
          <li><b>numeric_range</b> - начальное и конечное значения диапазона, заданные через слеш (-). <br>
          Значения могут быть целыми числами или числами с плавающей запятой. <br>
           Первое значение должно быть меньше, чем второе.</li>
          </ul>
        </li>
        </ul>
        <div>Опциональные параметры:</div>
        <ul>
        <li>
          <b>default</b> - значение по умолчанию, которое выводится в случае,
           если категоризируемое поле не соответствует какому-либо из указанных диапазонов. По умолчанию значение – "None".
          </ul>
        </li>
        </ul>
      `,
    rename: `
        <h3>rename &lt;wc-field&gt; AS &lt;wc-field&gt;...</h3>
        <div>Команда переименовывает одно или несколько полей. Для переименования полей с похожими именами
         можно использовать подстановочный знак (*).
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>&lt;wc-field&gt; AS &lt;wc-field&gt;</b> –   название поля и через оператор AS имя для его замены.
           В именах полей можно использовать подстановочные знаки. Имена с пробелами должны быть заключены в кавычки.
        </li>
        </ul>
      `,
    replace: `
        <h3>replace (&lt;wc-string&gt; WITH &lt;wc-string&gt;)[IN &lt;field&gt;]</h3>
        <div>Команда заменяет значение поля указанным значением. Заменяет единственное вхождение первой строки другой строкой в указанном поле.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>&lt;wc-string&gt; WITH &lt;wc-string&gt;</b> –   значение поля и значение для его замены,
           разделённые оператором WITH. Можно использовать символы подстановки для соответствия одному или нескольким значениям.
        </li>
        <li>
          <b>IN &lt;field&gt;</b> –   имя поля, в котором происходит замена значения.
           Чтобы заменить значения в поле <b>field</b>, необходимо указать имя поля с оператором IN.
        </li>
        </ul>
      `,
    reverse: `
        <h3>reverse</h3>
        <div>Команда инвертирует порядок результатов. <br>
        <b>Важно!</b> <br>
        Порядок, в котором события будут поступать на обработку в команду <b>reverse</b>, определяется результатом
        выполнения предыдущих команд. В случае необходимости сохранения одинакового порядка событий для разных
        запусков запроса, необходимо предусмотреть сортировку событий до их передачи на вход команды <b>reverse</b>.
        Для этого можно использовать, например, команду <b>sort</b>.
        </div>
      `,
    rex: `
        <h3>rex (field=&lt;field&gt; &lt;regex-expression&gt; [max_match=&lt;int&gt;])</h3>
        <div>Команда позволяет находить совпадения в значениях полей согласно регулярным выражениям.</div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field</b> – поле, по которому осуществляется поиск.
        </li>
        <li>
          <b>regex-expression</b> – регулярное выражение, согласно которому производится поиск совпадений.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>max_match</b> - определяет максимальное количество совпадений,
         которые должны быть найдены в поле. По умолчанию: 1 (первое совпадение). <br>
         Если поле содержит multivalue-список, то совпадения будут определяться по каждому элементу списка в отдельности.
        </li>
        </ul>
      `,
    search: `
        <h3>search &lt;logical-expression&gt; [&lt;time&gt;]</h3>
        <div>Команда используется для получения из индекса необработанных данных. <br>
        Также команду можно применить для осуществления поиска по результатам запроса.
        В этом случае можно фильтровать события, указывая необходимые поля и используя ключевые слова
        или логические выражения. В том числе допустимо использование
        wildcard (*) для получения более широкого поля результатов. <br>
        Команда <b>search</b> также может быть использована в подзапросе. После получения данных из индекса,
        к ним можно применять различные команды трансформации, фильтрации и т.д. Отличие от команды
        <b>otstats</b> (которая читает проиндексированные данные) заключается в том, что <b>search</b> читает из
        файловой системы только поля _time и _raw, что может привести к необходимости проводить дополнительный
        парсинг во время поискового запроса.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>logical-expression</b> – логическое выражение. <br>
          Выражение может содержать два и более варианта поиска, соединяемых логическими операторами,
          такими как OR или AND. Поиск по определенным значениям осуществляется с помощью знака равно "="
          или не равно "!=". Может быть использован также оператор регулярных выражений wildcard (в конце строки)
          и знаки сравнения (<, >, >=, <=, !=) для числовых значений. <br>
          В случае, если команда используется в начале запроса для чтения необработанных данных,
          то должен быть указан индекс, из которого будет производиться чтение.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>time</b> - в подзапросах (или основном запросе) могут использоваться дополнительные
         опции времени (latest= и earliest=) для поиска по другому временному интервалу. Временные рамки
         указываются в формате Epoch time (Linux time).
        </li>
        </ul>
      `,
    sort: `
        <h3>sort [&lt;count&gt;=int] [- | +]&lt;sort-by-clause&gt;...</h3>
        <div>Команда sort сортирует результаты по указанному полю. События, в которых поле сортировки отсутствует,
         рассматриваются как имеющие наибольшее значение (в случае сортировки по возрастанию) и как имеющие наименьшее
         значение (в случае сортировки по убыванию).
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>[-|+]&lt;sort-by-clause&gt;</b> – список полей, по которым будет выполнена сортировка:
          <ul>
            <li>
            При указании опционального знака минус (-) используется убывающий порядок сортировки.
            </li>
            <li>
            При указании опционального знака плюс (+) используется возрастающий порядок сортировки. <br>
            По умолчанию используется возрастающий порядок сортировки. <br>
            При указании нескольких полей для сортировки, поля должны быть разделены запятыми или пробелами. <br>
            Синтаксис : [ - | + ] &lt;sort-field1&gt;, [ - | + ] &lt;sort-field2&gt; …
            </li>
          </ul>
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>count</b> - если первым аргументом команды <b>sort</b> является <b>count</b>=&lt;целое число&gt;,
         то результатом сортировки будет только заданное число событий, а не отсортированные исходные данные в полном объеме.
        </li>
        </ul>
      `,
    spath: `
        <h3>spath [input=&lt;field&gt;] [output=&lt;field&gt;] path=&lt;datapath&gt;</h3>
        <div>Команда spath позволяет извлекать информацию из структурированных данных в формате JSON.
         Команда сохраняет эту информацию в одном или нескольких полях.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>path</b> – путь к значению, которое необходимо извлечь. Путь состоит из одного или нескольких шагов
          местоположения, разделенных точками. Шаг местоположения состоит из имени поля и необязательного индекса,
          заключенного в фигурные скобки. Индекс должен быть целым числом, чтобы ссылаться на положение данных в массиве
          (индексация начинается с нуля). Например, 'foo.bar.baz' или 'foo.bar.baz{2}'.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>input</b> - поле для чтения и извлечения значений.</li>
        <li><b>output</b> - поле, в которое будет записано извлечённое значение. Если параметр не определён,
         именем поля для извлечённого значения становится значение параметра <b>path</b>.</li>
        </ul>
      `,
    stats: `
        <h3>stats &lt;stats-функция&gt;(field) [AS field] ... [BY field-list]</h3>
        <div>Команда считает агрегирующую статистику, такую как среднее, количество, сумма и т.п.,
         по имеющемуся набору данных. Процесс аналогичен SQL-агрегации. Если команда <b>stats</b> используется без BY группировки,
         то возвращается только один ряд, как совокупность всех данных входящего набора. Если применяется группировка BY,
         то возвращается один ряд для каждого уникального значения, входящего в набор, указанный после BY.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>stats-функция</b> – статистическая функция, которая будет применена к полю. Перечень функций представлен в разделе ниже.
        </li>
        <li>
          <b>field</b> – имя поля, к которому будет применена статистическая функция.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>AS &lt;field&gt;</b> - имя поля, в которое будет записан результат статистической функции.
         По умолчанию, если не указывается AS &lt;field&gt;, то именем поля будет сама применяемая функция.</li>
        <li><b>BY &lt;field-list&gt;</b> - группировка по определенному полю или списку полей.</li>
        </ul>
      `,
    streamstats: `
        <h3>streamstats [window=&lt;int&gt;] [time_window=&lt;span-length&gt;] &lt;stats-agg-term&gt;... [BY &lt;field-list&gt;]</h3>
        <div>Команда вычисляет статистику по значениям полей и добавляет поле результата к каждому событию. <br>
        Команда streamstats считает статистику от события к событию, формируя каждый раз новый результат в момент
        поступления очередного события на обработку. Такая обработка событий для подсчета статистики называется
        потоковой или стриминговой. Другими словами, команда <b>streamstats</b> рассчитывает статистику "по мере просмотра"
        событий, обновляя результат статистики для каждого просматриваемого события в момент его поступления на обработку. <br>
        <b>Важно!</b><br>
        Порядок, в котором события будут поступать на обработку в команду <b>streamstats</b>, определяется результатом выполнения
        предыдущих команд. Иногда, при этом, одинаковый порядок событий не может быть гарантирован для разных запусков запроса.
        В случае необходимости сохранения одного и того же порядка событий для разных запусков запроса, необходимо предусмотреть
        сортировку событий до их поступления на вход команды <b>streamstats</b>. Для этого можно использовать команду <b>sort</b>.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>stats-agg-term</b> – статистические функции, применяемые к полям и eval-выражениям.
           Результат выполнения функции может быть помещён в отдельное поле с именем, указанным после операнда AS. <br>
           Синтаксис: &lt;stats-func&gt; ( &lt;evaled-field&gt; | &lt;field&gt; ) [AS &lt;newfield&gt;]
        </li>
        <li>
          <b>field</b> – имя поля, к которому будет применена статистическая функция. <br>
          Перечень функций представлен в разделе ниже.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li><b>BY &lt;field-list&gt;</b> -  одно или несколько полей, по которым будет производиться группировка
        вычисляемой статистики.</li>
        <li><b>time_window</b> - временное окно для выполнения "потоковых вычислений". Статистика,
        определенная аргументом <b>stats-agg-term</b>, считается для событий, которые попадают во временное окно,
        заданное аргументом <b>time_window</b>. Аргумент time_window ограничен диапазоном
        значения поля <b>_time</b> для обрабатываемых событий.
        Для использования аргумента <b>time_window</b> события должны быть отсортированы в убывающем или возрастающем порядке по полю <b>_time</b>.
        Аргумент <b>time_window</b> может использоваться вместе с аргументом window. <br>
        Синтаксис: <b>time_window=&lt;span-length&gt;, где &lt;span-length&gt;</b> – диапазон времени в секундах.
        </li>
        <li><b>window</b> - количество событий, в пределах которого происходит подсчет статистики.
         Если <b>window</b> равно нулю, то расчет статистики будет выполнен только для одного события – того,
         которое обрабатывается в данный момент.
        </li>
        </ul>
      `,
    superjoin: `
        <h3>superjoin &lt;field-list&gt; &lt;superjoin-params&gt;</h3>
        <div>Команда superjoin комбинирует данные из таблицы, указанной в параметрах команды superjoin,
         с результатами основного запроса без каких-либо ограничений на размер таблицы.<br>
        <b>Важно!</b><br>
        Команда superjoin не является частью стандартного набора команд. Находится в плагине OTLExtend.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field-list</b> – поля, по которым будет выполнена команда <b>superjoin</b>. Совпадение значений полей основного
          запроса и подзапроса должно быть с точностью до регистра отдельных символов. <br>
          Синтаксис: &lt;field1&gt;, &lt;field2&gt;, ...
        </li>
        <li>
          <b>superjoin-params</b> – опции команды superjoin. <br>
          Синтаксис: type=(inner|outer|left) format=(parquet|csv|orc|)  path=(parquet|csv|orc|) <br>
          Описание:
          <ul>
          <li><b>type</b> - тип команды <b>superjoin</b>. <br>
          Синтаксис: type=inner | outer | left. <br>
          Значение по умолчанию отсутствует. <br>
          Разница между типами заключается в том, каким образом обрабатываются события основного запроса,
          которые не могут быть поставлены в соответствие событиям из таблицы. Как в inner так и в left
          возвращаются только те события, которые могут быть поставлены в соответствие друг другу по заданному полю.
          Однако результаты inner join не включают события основного запроса, которые не имеют совпадений
          в присоединяемой таблице. Результат же left join (или outer join) включает все события основного запроса и те
          события из присоединяемой таблицы, которые могут быть поставлены в соответствие событиям основного запроса
          по заданному полю.
          <ul>
          <li><b>format</b> - формат таблицы, с которой соединяются результаты основного запроса. <br>
          Синтаксис: format=(parquet|csv|orc|). <br>
          Значение по умолчанию отсутствует.
          </li>
          <li><b>path</b> - путь к таблице с которой соединяются результаты основного запроса в external_data. <br>
          Синтаксис: path=(path/to/table). <br>
          Значение по умолчанию отсутствует.
          </li>
          </ul>
          </li>
          </ul>
        </li>
        </ul>
      `,
    tail: `
        <h3>tail [&lt;N&gt;] | [limit=&lt;int&gt;]</h3>
        <div>Возвращает последнее N число указанных результатов. События возвращаются в обратном порядке,
         начиная с конца набора результатов.<br>
        <b>Важно!</b><br>
        Порядок, в котором события будут поступать на обработку в команду <b>tail</b>, определяется результатам выполнения
        предыдущих команд. В случае необходимости сохранения одного и того же порядка событий, необходимо предусмотреть
        сортировку событий внутри запроса. Например, с помощью команды <b>sort</b>.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>N</b> – количество возвращаемых результатов.<br>
          Значение по умолчанию = 10.
        </li>
        <li>
          <b>limit=&lt;int&gt;</b> – другой вариант задания количества возвращаемых результатов.
        </li>
        </ul>
      `,
    timechart: `
        <h3>timechart [span=&lt;timescale&gt;] (&lt;stats-agg-term&gt; BY &lt;split-by-clause&gt;)</h3>
        <div>Команда создает диаграмму временного ряда с соответствующей ей статистической таблицей.<br>
        <b>Диаграмма временного ряда</b> – это диаграмма с отображением времени на оси X.
         По оси Y отображаются значения, вычисленные применением к какому-либо полю статистической агрегации.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>stats-agg-term</b> – статистические функции (перечень см. в разделе ниже),
           применяемые к полям и eval-выражениям. Результат выполнения функции может быть помещён в отдельное
           поле с именем, указанным после операнда AS.<br>
          Синтаксис: &lt;stats-func&gt;( &lt;evaled-field&gt; | &lt;wc-field&gt; ) [AS &lt;new-field&gt;].
        </li>
        <li>
          <b>BY &lt;split-by-clause&gt;</b> – поле для разделения результатов.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li>
          <b>span</b> – временной интервал для группировки. Возможные варианты указаны в таблице ниже.
        </li>
        </ul>
      `,
    top: `
        <h3>top [&lt;number&gt;] &lt;field-list&gt; [&lt;by-clause&gt;]</h3>
        <div>Команда находит наиболее часто встречающиеся значения в выбранных полях.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>field-list</b> – поле или список полей (через запятую или пробел), по которым проводится подсчёт.
        </li>
        <li>
          <b>BY &lt;split-by-clause&gt;</b> – поле для разделения результатов.
        </li>
        </ul>
        <div>Опциональный параметр:</div>
        <ul>
        <li>
          <b>number</b> – указывается количество верхних строк, которые должны быть выведены в результате. По умолчанию: 10.
        </li>
        <li>
          <b>by-clause</b> – одно или несколько полей, значения которых будут названиями столбцов в результирующей таблице.
        </li>
        </ul>
      `,
    transpose: `
        <h3>transpose [int] [column_name=&lt;string&gt;] [header_field=&lt;field&gt;] [include_empty=&lt;bool&gt;]</h3>
        <div>Команда возвращает заданное число рядов поисковых результатов в виде колонок – происходит операция транспонирования.
        </div>
        <div>Опциональный параметр:</div>
        <ul>
        <li>
          <b>column_name</b> – имя, которое будет носить первая колонка. Значениями ячеек в этой колонке
           будут наименования столбцов до применения команды <b>transpose</b>. <br>
           Значение по умолчанию: column.
        </li>
        <li>
          <b>header_field</b> – имя колонки до трансформации, значения из которой будут использованы
           как имена колонок (кроме первой колонки) в транспонированных данных. <br>
           Значение по умолчанию: row 1, row 2, row 3, и т.д.
        </li>
        <li>
          <b>include_empty</b> – определяет включать (true) или нет (false) в операцию транспонирования те поля,
           которые содержат пустые и только пустые значения.  <br> 
           Значение по умолчанию: true.
        </li>
        <li>
          <b>int</b> – определяет количество рядов для транспонирования. Чтобы транспонировать все ряды,
           значения должно быть равным нулю. <br>
           Значение по умолчанию: 5.
        </li>
        </ul>
      `,
    where: `
        <h3>where &lt;eval-expression&gt;</h3>
        <div>Команда <b>where</b> использует eval-выражения для фильтрации результатов запроса.
         Эти eval-выражения должны быть булевыми выражениями, то есть возвращать true или false значения.
         Команда <b>where</b> пропускает только те результаты, для которых eval-выражения возвращают true.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>eval-expression</b> – операции сравнения, логические выражения, в том числе содержащие функции.
        </li>
        </ul>
      `,
    xyseries: `
        <h3>xyseries &lt;x-field&gt; &lt;y-name-field&gt; &lt;y-data-field&gt;</h3>
        <div>Команда конвертирует результаты в табличный формат, пригодный для визуализации результата в формате диаграммы или графика.
        </div>
        <div>Обязательный параметр:</div>
        <ul>
        <li>
          <b>x-field</b> – значения поля, которые будут отложены на оси Х при рисовании графика. Синтаксис: &lt;field&gt;.
        </li>
        <li>
          <b>y-name-field</b> – значения поля, которые будут отложены на оси Y при рисовании графика. Синтаксис: &lt;field&gt;.
        </li>
        <li>
          <b>y-data-field</b> – значения поля, которые будут точками графика. <br>
          Синтаксис: &lt;field&gt;.
        </li>
        </ul>
      `,
    table: '<h3>Отображает только указанные поля. Синоним команды fields.</h3>',
  },
};

export default docs;
